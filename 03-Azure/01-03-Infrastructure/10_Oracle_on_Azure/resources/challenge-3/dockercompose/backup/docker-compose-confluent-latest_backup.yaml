services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_MAX_CLIENT_CNXNS: 60
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
    networks:
      - kafka-net

  connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-statuses
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: "/kafka/plugins"
      CLASSPATH: "/kafka/plugins/ojdbc8.jar,/kafka/plugins/postgresql-42.7.5.jar"
    command:  
      - bash 
      - -c 
      - |
        echo 'Installing JDBC and PostgreSQL plugin' && \
        curl -o /kafka/plugins/kafka-connect-jdbc-10.8.0.jar https://packages.confluent.io/maven/io/confluent/kafka-connect-jdbc/10.8.0/kafka-connect-jdbc-10.8.0.jar && \
        curl -o /kafka/plugins/postgresql-42.7.5.jar https://jdbc.postgresql.org/download/postgresql-42.7.5.jar && \
        exec /etc/confluent/docker/run
    volumes:
      - C:\tmp\kafka\plugins:/kafka/plugins
      - C:\oracle\instantclient_23_6\ojdbc8.jar:/kafka/plugins/ojdbc8.jar
    depends_on:
      - kafka
    networks:
      - kafka-net

  
  oracle:
    image: oracleinanutshell/oracle-xe-11g
    container_name: oracle-xe1
    hostname: oracle-xe1
    ports:
      - "1521:1521"
      - "5500:5500"
    environment:
      ORACLE_PASSWORD: password
      ORACLE_ALLOW_REMOTE: "true"
    networks:
      - kafka-net


  oracle21c:
    image: gvenzl/oracle-xe:21.3.0-full-faststart
    container_name: oracle-xe21c
    hostname: oracle-xe21c
    ports:
      - "1522:1522"
      - "5501:5501"
    environment:
      - ORACLE_PASSWORD=password
      - ORACLE_ALLOW_REMOTE="true"
    volumes:
      - C:\tmp\oracle\oraclexe21c:/opt/oracle/sqldeveloper
      - C:\tmp\oracle\oraclexe21c\init_scripts:/container-entrypoint-initdb.d 
    networks:
      - kafka-net    

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: microhack
    networks:
      - kafka-net


  pgadmin:
    image: dpage/pgadmin4:9.0.0
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - kafka-net
      

networks:
  kafka-net:
    driver: bridge